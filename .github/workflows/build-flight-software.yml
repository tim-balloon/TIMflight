name: Build-flight-software

on:
  push:
    branches:
    - main
    - '*ubuntu-20'
  pull_request:
    branches:
    - main
    - '*ubuntu-20'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # There are several executables for running ground software on individual contributor
  # computers, so ensure they can always successfully build in main.
  build-flight-software:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
    - uses: actions/checkout@v3.3.0
      # with:
        # submodules: recursive
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Install Dependencies
      run: |
        sudo apt update &&
        sudo apt install cmake -y &&
        sudo apt install autoconf -y &&
        sudo apt install libtool -y &&
        sudo apt install g++ -y &&
        sudo apt install libssl-dev -y &&
        sudo apt install libgsl0-dev -y &&
        sudo apt install libglib2.0-dev -y &&
        sudo apt install libsensors4-dev -y &&
        sudo apt install libmosquitto-dev -y &&
        sudo apt install libck-dev -y &&
        sudo apt install libasound2-dev -y &&
        sudo apt install libmodbus-dev -y &&
        sudo apt install libfftw3-dev -y &&
        sudo apt install libusb-1.0-0-dev -y &&
        sudo apt install python2 -y
        sudo ldconfig

    - name: Configure flight software CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      # Build with tests off, then run tests alone later.
      run: |
        cd mcp &&
        cmake -B ${{github.workspace}}/mcp/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_TESTS_ON_BUILD=OFF

    - name: Build flight software
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/mcp/build --config ${{env.BUILD_TYPE}}

    - name: Run flight software test suite
      run: cd ${{github.workspace}}/mcp/build && ctest -V
